name: Create Release
run-name: Create ${{ github.event.inputs.release_type }} release via GitHub App

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        type: choice
        default: 'minor'
        options:
          - 'major'
          - 'minor'
          - 'patch'

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.release_type == 'patch' && 'main' || 'dev' }}
          fetch-depth: 0  # Necessário para operações Git posteriores

      - name: Get current version
        id: get_version
        run: |
          version=$(grep -oP '(?<=version:\s)[0-9]+\.[0-9]+\.[0-9]+' pubspec.yaml)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          version=${{ steps.get_version.outputs.version }}
          IFS='.' read -r major minor patch <<< "$version"
          case "${{ github.event.inputs.release_type }}" in
            major)
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            minor)
              minor=$((minor + 1))
              patch=0
              ;;
            patch)
              patch=$((patch + 1))
              ;;
          esac
          new_version="$major.$minor.$patch"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Update pubspec.yaml
        run: |
          new_version=${{ steps.bump_version.outputs.new_version }}
          sed -i "s/version: .*/version: $new_version/" pubspec.yaml

      - name: Commit changes as GitHub App
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add pubspec.yaml
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }} [skip ci]"

      - name: Generate GitHub App Token
        id: app_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.BYPASS_RELEASE_KEY }}
          repository: ${{ github.repository }}
          permissions: |
            {
              "contents": "write"
            }

      - name: Verify App Permissions
        env:
          TOKEN: ${{ steps.app_token.outputs.token }}
        run: |
          echo "Token (prefix): ${TOKEN:0:10}..."
          curl -s -H "Authorization: token $TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }} | jq .permissions

      - name: Push as GitHub App
        env:
          TOKEN: ${{ steps.app_token.outputs.token }}
        run: |
          git checkout -b release/${{ steps.bump_version.outputs.new_version }}
          git push "https://x-access-token:$TOKEN@github.com/${{ github.repository }}.git" \
            HEAD:release/${{ steps.bump_version.outputs.new_version }} \
            --force-with-lease \
            --verbose

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ steps.app_token.outputs.token }}
          branch: release/${{ steps.bump_version.outputs.new_version }}
          base: main
          title: "Release ${{ steps.bump_version.outputs.new_version }}"
          body: "Automated release version bump via GitHub App"
          labels: "release"