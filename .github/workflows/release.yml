name: Create Release
run-name: Create ${{ github.event.inputs.release_type }} release by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        type: choice
        default: 'minor'
        options:
          - 'major'
          - 'minor'
          - 'patch'

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.release_type == 'patch' && 'main' || 'dev' }}
          fetch-depth: 0

      - name: Get current version
        id: get_version
        run: |
          version=$(grep -oP '(?<=version:\s)[0-9]+\.[0-9]+\.[0-9]+' pubspec.yaml)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          version=${{ steps.get_version.outputs.version }}
          IFS='.' read -r major minor patch <<< "$version"
          case "${{ github.event.inputs.release_type }}" in
            major)
              major=$((major + 1)); minor=0; patch=0 ;;
            minor)
              minor=$((minor + 1)); patch=0 ;;
            patch)
              patch=$((patch + 1)) ;;
          esac
          echo "new_version=$major.$minor.$patch" >> $GITHUB_OUTPUT

      - name: Update pubspec.yaml
        run: |
          sed -i "s/version: .*/version: ${{ steps.bump_version.outputs.new_version }}/" pubspec.yaml

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin git@github.com:${{ github.repository }}.git

      - name: Commit changes
        run: |
          git add pubspec.yaml
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          git push origin HEAD

      - name: Create release branch
        run: |
          git checkout -b release/${{ steps.bump_version.outputs.new_version }}
          git push origin release/${{ steps.bump_version.outputs.new_version }}
